<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vinícius Krolow</title>
    <link>http://krolow.com.br/</link>
    <description>Recent content on Vinícius Krolow</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 Jan 2017 11:51:54 +0000</lastBuildDate>
    <atom:link href="http://krolow.com.br/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Go compile binary not running in alpine and busybox</title>
      <link>http://krolow.com.br/til/go-compile-binary-not-running-in-alpine-and-busybox/</link>
      <pubDate>Wed, 11 Jan 2017 11:51:54 +0000</pubDate>
      
      <guid>http://krolow.com.br/til/go-compile-binary-not-running-in-alpine-and-busybox/</guid>
      <description>&lt;p&gt;I was working in a &lt;a href=&#34;https://github.com/krolow/tld-proxy-pac&#34;&gt;proxy pac project to serve TLD for local development&lt;/a&gt;. I have decided to use
golang, because the code would be quite simple and get a binary as output would help in use a small docker image and just copy the binary.&lt;/p&gt;

&lt;p&gt;Once the code was finish, I have started the creation of the docker file that was quite simple, just a copy of binary file to inside the
docker image.&lt;/p&gt;

&lt;p&gt;Unfortunately it was not that simple, in the first tries I got this error:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;panic: standard_init_linux.go:175: &lt;span style=&#34;color: #f8f8f2&#34;&gt;exec&lt;/span&gt; user process caused &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;no such file or directory&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;recovered&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;
        panic: standard_init_linux.go:175: &lt;span style=&#34;color: #f8f8f2&#34;&gt;exec&lt;/span&gt; user process caused &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;no such file or directory&amp;quot;&lt;/span&gt;

goroutine &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;running, locked to thread&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;:
panic&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x7ea980, 0xc820143420&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /usr/local/go/src/runtime/panic.go:481 +0x3e6
github.com/urfave/cli.HandleAction.func1&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0xc82011b2e8&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /go/src/github.com/opencontainers/runc/Godeps/_workspace/src/github.com/urfave/cli/app.go:478 +0x38e
panic&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x7ea980, 0xc820143420&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /usr/local/go/src/runtime/panic.go:443 +0x4e9
github.com/opencontainers/runc/libcontainer.&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;*LinuxFactory&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;.StartInitialization.func1&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0xc82011abf8, 0xc82001e090, 0xc82011ad08&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /go/src/github.com/opencontainers/runc/Godeps/_workspace/src/github.com/opencontainers/runc/libcontainer/factory_linux.go:259 +0x136
github.com/opencontainers/runc/libcontainer.&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;*LinuxFactory&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;.StartInitialization&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0xc82005c820, 0x7f53b3b86470, 0xc820143420&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /go/src/github.com/opencontainers/runc/Godeps/_workspace/src/github.com/opencontainers/runc/libcontainer/factory_linux.go:277 +0x5b1
main.glob.func8&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0xc82007a780, 0x0, 0x0&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /go/src/github.com/opencontainers/runc/main_unix.go:26 +0x68
reflect.Value.call&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x74f180, 0x900b08, 0x13, 0x846ea8, 0x4, 0xc82011b268, 0x1, 0x1, 0x0, 0x0, ...&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /usr/local/go/src/reflect/value.go:435 +0x120d
reflect.Value.Call&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x74f180, 0x900b08, 0x13, 0xc82011b268, 0x1, 0x1, 0x0, 0x0, 0x0&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /usr/local/go/src/reflect/value.go:303 +0xb1
github.com/urfave/cli.HandleAction&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x74f180, 0x900b08, 0xc82007a780, 0x0, 0x0&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /go/src/github.com/opencontainers/runc/Godeps/_workspace/src/github.com/urfave/cli/app.go:487 +0x2ee
github.com/urfave/cli.Command.Run&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x849d58, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8dfe00, 0x51, 0x0, ...&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /go/src/github.com/opencontainers/runc/Godeps/_workspace/src/github.com/urfave/cli/command.go:191 +0xfec
github.com/urfave/cli.&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;*App&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;.Run&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0xc820001980, 0xc82000a100, 0x2, 0x2, 0x0, 0x0&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /go/src/github.com/opencontainers/runc/Godeps/_workspace/src/github.com/urfave/cli/app.go:240 +0xaa4
main.main&lt;span style=&#34;color: #f92672&#34;&gt;()&lt;/span&gt;
        /go/src/github.com/opencontainers/runc/main.go:137 +0xe24
➜
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After some google about the error, I was thinking it might be related with the docker version, I have tried to upgrade and downgrade and keep
with no lucky.&lt;/p&gt;

&lt;p&gt;So I found &lt;a href=&#34;http://stackoverflow.com/questions/36279253/go-compiled-binary-wont-run-in-an-alpine-docker-container-on-ubuntu-host&#34;&gt;this
stackoverflow&lt;/a&gt; by the
description it seems that error was quite similar to mine.&lt;/p&gt;

&lt;p&gt;I have decided to give it a try, and it works!  Basically the issue is that golang &lt;code&gt;net&lt;/code&gt; library when normally build a package it creates
dynamic links to some &lt;code&gt;.so&lt;/code&gt; libs, in my case these were the links:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt; -&amp;gt; ldd builds/1.0.0/linux_amd64/tld-proxy-pac
        linux-vdso.so.1 &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&amp;gt;
        &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x00007ffd9a087000&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        libpthread.so.0 &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libpthread.so.0 &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x00007f6470502000&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        libc.so.6 &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libc.so.6 &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x00007f6470139000&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /lib64/ld-linux-x86-64.so.2 &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x00005589babab000&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;ldd builds/1.0.0/linux_amd64/tld-proxy-pac
        linux-vdso.so.1 &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&amp;gt;  &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x00007ffd9a087000&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        libpthread.so.0 &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libpthread.so.0 &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x00007f6470502000&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        libc.so.6 &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libc.so.6 &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x00007f6470139000&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /lib64/ld-linux-x86-64.so.2 &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x00005589babab000&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;So what I have to do is build &lt;code&gt;netgo&lt;/code&gt; by forcing static links &lt;code&gt;CGO_ENABLED=0 go build -tags netgo -a -v&lt;/code&gt; and build my code using
&lt;code&gt;CGO_ENABLED=0&lt;/code&gt; as well &lt;code&gt;CGO_ENABLED=0 goxc&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;By checking the links in the new binary output, I could ensure the non existence of dynamic links:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;-&amp;gt; ldd builds/1.0.0/linux_amd64/tld-proxy-pac
        not a dynamic executable
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DigitalOcean: Microservices as the Cloud</title>
      <link>http://krolow.com.br/learningpath/microservices/use-case/talk-digital-ocean-microservice/</link>
      <pubDate>Wed, 27 Apr 2016 11:33:01 -0300</pubDate>
      
      <guid>http://krolow.com.br/learningpath/microservices/use-case/talk-digital-ocean-microservice/</guid>
      <description>&lt;p&gt;In this talk, &lt;a href=&#34;https://twitter.com/pcalcado&#34;&gt;Phil Calçado&lt;/a&gt;
shows his previous experiences in other companies as well his
current experience in migrate the architecture of Digital
Ocean to make usage of microservices architecture.&lt;/p&gt;

&lt;p&gt;He starts the talk showing how the architecture of digital
ocean works, it uses some iterations showing from where it
come and where it is nowadays.&lt;/p&gt;

&lt;p&gt;Once explained the architecture he starts to talk about the
move to microservices, and how accomplish the &lt;a href=&#34;http://martinfowler.com/bliki/MicroservicePrerequisites.html&#34;&gt;micro services
prerequisites&lt;/a&gt; that are described by Martin Fowler.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prerequisites are:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Rapid provisioning&lt;/li&gt;
&lt;li&gt;Basic Monitoring&lt;/li&gt;
&lt;li&gt;Rapid application deployment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;How digitalocean solve:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Rapid provisioning:&lt;/strong&gt; They use their self to provision new machines&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Basic Monitoring:&lt;/strong&gt; They use &lt;a href=&#34;https://prometheus.io/&#34;&gt;Prometheus&lt;/a&gt;, he points out some problems of &lt;a href=&#34;http://graphite.wikidot.com/&#34;&gt;graphite&lt;/a&gt; like usage of disks.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rapid application deployment:&lt;/strong&gt; They are using &lt;a href=&#34;http://kubernetes.io/&#34;&gt;kubernets&lt;/a&gt; for that,
he mentions about get involved in a lot of discussing between the usage of &lt;a href=&#34;http://mesos.apache.org/&#34;&gt;mesos&lt;/a&gt; and kubernets, he
says that you might choose the best for your use case, BUT, that google has been investing a lot of money in
kubernets, so it probably good to keep with it, so probably features that it does not have now it would
probably have in a near future. In the other hand if you are in a big company that can afford support, it would be
good choose mesos as it has a paid support team.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;In Q&amp;amp;A section there were some good questions/answers that come up like:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;DNS vs Service Discovery, he suggests the usage of service discovery as DNS takes to long to propagate, his suggestion is to use
&lt;a href=&#34;https://github.com/hashicorp/consul&#34;&gt;Consul&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;API Gateways and if falcor/graphql might be a solution to avoid gateways, he says that would avoid usage of falcor/graphql as it would relay
the logic on client, and it&amp;rsquo;s something that he attempts to avoid as the process to deploy new versions of app take to long (like process
of IOS to publish new app versions)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>DOCKER_OPTS not working in ubuntu 16.04</title>
      <link>http://krolow.com.br/til/docker-opts-not-working-in-ubuntu-16.04/</link>
      <pubDate>Sun, 27 Mar 2016 13:56:59 +0000</pubDate>
      
      <guid>http://krolow.com.br/til/docker-opts-not-working-in-ubuntu-16.04/</guid>
      <description>&lt;p&gt;In ubuntu 16.04 docker was not loading the &lt;code&gt;DOCKER_OPTS&lt;/code&gt; from &lt;code&gt;/etc/default/docker&lt;/code&gt; file, so I was not able to change DNS of docker
global.&lt;/p&gt;

&lt;p&gt;After search a bit i found that &lt;a href=&#34;https://github.com/docker/docker/issues/9889#issuecomment-109766580&#34;&gt;issue &lt;/a&gt; with a explanation of why it was
not working.&lt;/p&gt;

&lt;p&gt;So basically the systemd docker configuration (&lt;code&gt;/lib/systemd/system/docker.service&lt;/code&gt;) is not using the &lt;code&gt;/etc/default/docker&lt;/code&gt;, the problem is solved by adding an &lt;code&gt;EnvironmentFile&lt;/code&gt; directive and modify command to include the options from file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;EnvironmentFile=-/etc/default/docker
ExecStart=/usr/bin/docker daemon $DOCKER_OPTS -H fd://
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;
In the end &lt;code&gt;/lib/systemd/system/docker.service&lt;/code&gt; looks like:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;Unit&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;Description&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;Docker Application Container Engine
&lt;span style=&#34;color: #f8f8f2&#34;&gt;Documentation&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;https://docs.docker.com
&lt;span style=&#34;color: #f8f8f2&#34;&gt;After&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;network.target docker.socket
&lt;span style=&#34;color: #f8f8f2&#34;&gt;Requires&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;docker.socket

&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;Service&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;Type&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;notify
&lt;span style=&#34;color: #f8f8f2&#34;&gt;EnvironmentFile&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;-/etc/default/docker
&lt;span style=&#34;color: #f8f8f2&#34;&gt;ExecStart&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;/usr/bin/docker daemon &lt;span style=&#34;color: #f8f8f2&#34;&gt;$DOCKER_OPTS&lt;/span&gt; -H fd://
&lt;span style=&#34;color: #f8f8f2&#34;&gt;MountFlags&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;slave
&lt;span style=&#34;color: #f8f8f2&#34;&gt;LimitNOFILE&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;1048576
&lt;span style=&#34;color: #f8f8f2&#34;&gt;LimitNPROC&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;1048576
&lt;span style=&#34;color: #f8f8f2&#34;&gt;LimitCORE&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;infinity
&lt;span style=&#34;color: #f8f8f2&#34;&gt;TimeoutStartSec&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;0

&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;Install&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;WantedBy&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;multi-user.target
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once edited, I have saved and restarted the docker service, and voila DOCKER_OPTS was working and my docker images are getting the right DNS.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What is the maximun ram supported?</title>
      <link>http://krolow.com.br/til/what-is-the-maximun-ram-supported/</link>
      <pubDate>Sun, 13 Mar 2016 12:14:21 -0300</pubDate>
      
      <guid>http://krolow.com.br/til/what-is-the-maximun-ram-supported/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Discover how much ram machine supports:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo dmidecode -t 16
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# dmidecode 2.12
SMBIOS 2.6 present.

Handle 0x002E, DMI type 16, 15 bytes
Physical Memory Array
  Location: System Board Or Motherboard
  Use: System Memory
  Error Correction Type: None
  Maximum Capacity: 8 GB
  Error Information Handle: Not Provided
  Number Of Devices: 2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Discover your currently memory installed:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo dmidecode -t 17
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Output:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# dmidecode 2.12
SMBIOS 2.6 present.

Handle 0x002F, DMI type 17, 28 bytes
Memory Device
  Array Handle: 0x002E
  Error Information Handle: Not Provided
  Total Width: 64 bits
  Data Width: 64 bits
  Size: 4096 MB
  Form Factor: DIMM
  Set: None
  Locator: ChannelA-DIMM0
  Bank Locator: BANK 0
  Type: DDR3
  Type Detail: Synchronous
  Speed: 1333 MHz
  Manufacturer: 0194
  Serial Number: 04570365
  Asset Tag: 9876543210
  Part Number: SH564128FH8N0QHSCG
  Rank: 2

Handle 0x0031, DMI type 17, 28 bytes
Memory Device
  Array Handle: 0x002E
  Error Information Handle: Not Provided
  Total Width: 64 bits
  Data Width: 64 bits
  Size: 4096 MB
  Form Factor: DIMM
  Set: None
  Locator: ChannelB-DIMM0
  Bank Locator: BANK 2
  Type: DDR3
  Type Detail: Synchronous
  Speed: 1333 MHz
  Manufacturer: Kingston
  Serial Number: E738A62B
  Asset Tag: 9876543210
  Part Number: 9905471-021.A00LF
  Rank: 2
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Find SATA speed</title>
      <link>http://krolow.com.br/til/find-sata-speed/</link>
      <pubDate>Sun, 13 Mar 2016 12:07:57 -0300</pubDate>
      
      <guid>http://krolow.com.br/til/find-sata-speed/</guid>
      <description>&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;dmesg &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; grep -i sata &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; grep &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;link up&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;SATA revision 1.0 =&amp;gt; 1.5 Gbit/s, 150 MB/s&lt;/li&gt;
&lt;li&gt;SATA revision 2.0 =&amp;gt; 3 Gbit/s, 300 MB/s&lt;/li&gt;
&lt;li&gt;SATA revision 3.0 =&amp;gt; 6 Gbit/s, 600 MB/s&lt;/li&gt;
&lt;li&gt;SATA revision 3.2 =&amp;gt; 16 Gbit/s, 1969 MB/s&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Change gnome terminal theme from console</title>
      <link>http://krolow.com.br/til/change-gnome-terminal-them-from-console/</link>
      <pubDate>Fri, 11 Mar 2016 12:22:28 -0300</pubDate>
      
      <guid>http://krolow.com.br/til/change-gnome-terminal-them-from-console/</guid>
      <description>&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #75715e&#34;&gt;# define the default profile&lt;/span&gt;
gconftool-2 --set --type string /apps/gnome-terminal/global/default_profile %profile-name%
&lt;/pre&gt;&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Back to terminal: Tmux &#43; Vim &#43; ZSH &#43; Gnome Terminal</title>
      <link>http://krolow.com.br/learningpath/terminal/configuring/back-to-terminal-tmux-vim-zsh-gnome-terminal/</link>
      <pubDate>Tue, 08 Mar 2016 14:23:02 -0300</pubDate>
      
      <guid>http://krolow.com.br/learningpath/terminal/configuring/back-to-terminal-tmux-vim-zsh-gnome-terminal/</guid>
      <description>

&lt;p&gt;I was willing to get back to vim (i have used it about 8-9 years ago), In the last couple of years I have switch around between code editors, &lt;strong&gt;I have tried&lt;/strong&gt;: Eclipse, Sublime 2 and lately I have been using atom.&lt;/p&gt;

&lt;p&gt;I get motivated to get back to vim, after &lt;a href=&#34;http://krolow.com.br/learningpath/vim/why-use-vim/talk-mastering-vim-language/&#34;&gt;have watched this talk about Vim&lt;/a&gt;, and by my &lt;a href=&#34;http://nunes.io&#34;&gt;co-worker&lt;/a&gt;, whom is using vim as well&amp;hellip; and it sounds excited to get back for use &lt;strong&gt;only terminal&lt;/strong&gt;, to try avoid as much as possible mouse.&lt;/p&gt;

&lt;p&gt;So well talking back about terminal, It&amp;rsquo;s going to be necessary to leave out from guake, the termianl that I have been using for the last few years. The reason is that guake, is not done to keep in fullscreen, it does it, but his core functionality is to be a drop-down terminal, so it is better to choose another terminal for given task, for this, gnome already come with &lt;code&gt;gnome-terminal&lt;/code&gt;, but It would be nice to gnome-terminal have support to split into panels/windows&amp;hellip; I have remember to have heard about &lt;strong&gt;tmux&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;looking-tmux-https-tmux-github-io:8e71b53f3bf81407dc9ec7f0b960bc77&#34;&gt;Looking &lt;a href=&#34;https://tmux.github.io/&#34;&gt;tmux&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Install in ubuntu:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install tmux
&lt;/pre&gt;&lt;/div&gt;

It by defaults uses &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;B&lt;/kbd&gt;, as the shortcut to trigger commands, &lt;strong&gt;but&lt;/strong&gt; it is quite uncomfortable to type, so I was needing to change the trigger, after some research of how to change it I have found this repository: &lt;a href=&#34;http://tony.github.io/tmux-config/&#34;&gt;http://tony.github.io/tmux-config/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is an example of tmux configuration, it changes the shortcut/trigger to &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt; and it brings some cool configurations like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/thewtex/tmux-mem-cpu-load&#34;&gt;tmux-mem-cpu-load&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Backing to Tmux itself&amp;hellip;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So basically the commands are simple, they &lt;strong&gt;MUST&lt;/strong&gt; be executed after the trigger/predix, so as I have used &lt;em&gt;tmux-config&lt;/em&gt; now it is: &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Basic commands that I have learned:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pane&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create vertical&lt;/strong&gt;: &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt; &lt;kbd&gt;%&lt;/kbd&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create horizontal&lt;/strong&gt;: &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt; &lt;kbd&gt;&amp;ldquo;&lt;/kbd&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rotate&lt;/strong&gt;: &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt; &lt;kbd&gt;o&lt;/kbd&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Window&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create new&lt;/strong&gt;: &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt;  &lt;kbd&gt;c&lt;/kbd&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Move to next window&lt;/strong&gt;:&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt; &lt;kbd&gt;n&lt;/kbd&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Move to prev window&lt;/strong&gt;: &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt; &lt;kbd&gt;p&lt;/kbd&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Move to specific window&lt;/strong&gt;: &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt; &lt;kbd&gt;[0-9]&lt;/kbd&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Scroll in specific panel&lt;/strong&gt; &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt; a &lt;/kbd&gt; &lt;kbd&gt;[&lt;/kbd&gt; to active and &lt;kbd&gt;up&lt;/kbd&gt; or &lt;kbd&gt;down&lt;/kbd&gt; to scroll&lt;/p&gt;

&lt;p&gt;I have decided to start always tmux together with &lt;strong&gt;zsh&lt;/strong&gt;, to achieve such a thing, I have added in the end of my &lt;code&gt;vim ~/.zshrc&lt;/code&gt; the following command:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[[&lt;/span&gt; ! &lt;span style=&#34;color: #f8f8f2&#34;&gt;$TERM&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;~ screen &lt;span style=&#34;color: #f92672&#34;&gt;]]&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;then&lt;/span&gt;
  &lt;span style=&#34;color: #f8f8f2&#34;&gt;exec&lt;/span&gt; tmux
&lt;span style=&#34;color: #66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id=&#34;given-a-better-look-to-terminal:8e71b53f3bf81407dc9ec7f0b960bc77&#34;&gt;Given a better look to terminal&lt;/h3&gt;

&lt;p&gt;Once been using tmux and gnome-terminal, it would be nice to have a better look in terminal. I have found few themes that would make it look better, so I have changed the themes for: &lt;strong&gt;oh-my-zsh&lt;/strong&gt;, &lt;strong&gt;Gnome Terminal&lt;/strong&gt;, and &lt;strong&gt;Vim&lt;/strong&gt;. For all of them I have tried to pick as similar as possible with atom dark theme:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Oh my zsh Theme:&lt;/strong&gt; &lt;a href=&#34;https://github.com/denysdovhan/spaceship-zsh-theme&#34;&gt;Spaceship&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gnome Terminal:&lt;/strong&gt; &lt;a href=&#34;https://github.com/denysdovhan/one-gnome-terminal&#34;&gt;One Gnome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Vim:&lt;/strong&gt; &lt;a href=&#34;https://github.com/gosukiwi/vim-atom-dark&#34;&gt;Atom Dark&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;to-keep-improve:8e71b53f3bf81407dc9ec7f0b960bc77&#34;&gt;To keep improve&lt;/h4&gt;

&lt;p&gt;I need to give a look on &lt;a href=&#34;https://github.com/powerline/powerline&#34;&gt;Powerline&lt;/a&gt;, after watch the below video it seems amazing:&lt;/p&gt;

&lt;iframe width=&#34;100%&#34; height=&#34;480&#34; src=&#34;https://www.youtube.com/embed/DgLIPYP8nnI&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;
A part of that, I still needing to configure my &lt;strong&gt;vim&lt;/strong&gt;, I have tried to use this &lt;a href=&#34;https://github.com/amix/vimrc&#34;&gt;vimrc&lt;/a&gt; it looks good, &lt;strong&gt;BUT&lt;/strong&gt; I think to begin it would be better if I configure &lt;strong&gt;vim&lt;/strong&gt; by my self, so that I can learn while configure it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Talk Why We use go at Apcera</title>
      <link>http://krolow.com.br/learningpath/go/why-use-go/talk-why-we-use-go-at-apcera/</link>
      <pubDate>Sun, 06 Mar 2016 18:19:12 -0300</pubDate>
      
      <guid>http://krolow.com.br/learningpath/go/why-use-go/talk-why-we-use-go-at-apcera/</guid>
      <description>

&lt;p&gt;This talk from of &lt;a href=&#34;https://twitter.com/derekcollison&#34;&gt;@derekcollison&lt;/a&gt;, shows why they are using golang at &lt;a href=&#34;https://www.apcera.com/&#34;&gt;apcera&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It caught my attention when he refers companies that are using golang, he mention one source:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/golang/go/wiki/gousers&#34;&gt;https://github.com/golang/go/wiki/gousers&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Opening the github and doing a quickly count &lt;code&gt;document.querySelectorAll(&#39;.markdown-body li&#39;);&lt;/code&gt; it says about 348 companies using golang are listed in this wiki.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Some highlight for:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Digitalocean&lt;/li&gt;
&lt;li&gt;Disqus&lt;/li&gt;
&lt;li&gt;Facebook&lt;/li&gt;
&lt;li&gt;Github&lt;/li&gt;
&lt;li&gt;Google&lt;/li&gt;
&lt;li&gt;IBM&lt;/li&gt;
&lt;li&gt;Netflix&lt;/li&gt;
&lt;li&gt;Pivotal&lt;/li&gt;
&lt;li&gt;Rackspace&lt;/li&gt;
&lt;li&gt;Shopify&lt;/li&gt;
&lt;li&gt;&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Some of these companies I didn&amp;rsquo;t know that were using golang, it&amp;rsquo;s nice to see so different companies, using go for achieve their expected results.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&amp;hellip; backing to the talk&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Some of the reasons that he gave about why go are:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Simple language, easy to remember&lt;/li&gt;
&lt;li&gt;Good standard library&lt;/li&gt;
&lt;li&gt;Easy concurrency&lt;/li&gt;
&lt;li&gt;Synchronous Programming Model (he compares that with node.js callbacks)&lt;/li&gt;
&lt;li&gt;Good garbage collection&lt;/li&gt;
&lt;li&gt;Really stacks&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;One point he emphasize and that I most like is that &lt;strong&gt;go is for get things done&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;why-go-at-apcera:09a2c2e163b7c74ce7d99dc4d4d615fb&#34;&gt;Why Go at Apcera?&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;In his opinion:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Best choice for distributed systems&lt;/strong&gt;&lt;br /&gt;
He says he is able to test all system by using Go routines, it&amp;rsquo;s not a kind of unit test, but more a functional test&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;It&amp;rsquo;s a good core language&lt;/strong&gt;&lt;br /&gt;
He says that is easy to hire talent people, even without a background experience, as it is an accessible language in few weeks people can be productive and know the language well.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Good standard library support&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tooling is amazing&lt;/strong&gt;&lt;br /&gt;
go vet, go fmt, go test -race, etc&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;He mention what they do there and why go fit:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Message systems&lt;/li&gt;
&lt;li&gt;Distributed Scheduling system&lt;/li&gt;
&lt;li&gt;Orchestator&lt;/li&gt;
&lt;li&gt;Policy Engine&lt;/li&gt;
&lt;li&gt;Isolation - Secure Perimeter Networking&lt;/li&gt;
&lt;li&gt;Semantically aware communications&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;He endup the talk asking: &lt;strong&gt;Why Go?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It is simple language&lt;/li&gt;
&lt;li&gt;Pretty good ecosystem&lt;/li&gt;
&lt;li&gt;It is getting better faster&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>list processes with most opened files</title>
      <link>http://krolow.com.br/til/list-processes-with-most-opened-files/</link>
      <pubDate>Sun, 06 Mar 2016 14:21:18 -0300</pubDate>
      
      <guid>http://krolow.com.br/til/list-processes-with-most-opened-files/</guid>
      <description>&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;lsof -n 2&amp;gt;/dev/null &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; awk &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;{print $1,$2}&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; sort &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; uniq -c &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; sort -nr &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; head -25 &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;read&lt;/span&gt; nr name pid &lt;span style=&#34;color: #f8f8f2&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;do&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;printf&lt;/span&gt; &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;%10d / %-10d %-15s (PID %5s)\n&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$nr&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;$(&lt;/span&gt;cat /proc/&lt;span style=&#34;color: #f8f8f2&#34;&gt;$pid&lt;/span&gt;/limits &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; grep &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;open files&amp;#39;&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;|&lt;/span&gt; awk &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;#39;{print $5}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$name&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;$pid;&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>How uber use Go for geolocation</title>
      <link>http://krolow.com.br/learningpath/go/why-use-go/how-uber-use-go-for-geolocation/</link>
      <pubDate>Sat, 27 Feb 2016 23:47:56 -0300</pubDate>
      
      <guid>http://krolow.com.br/learningpath/go/why-use-go/how-uber-use-go-for-geolocation/</guid>
      <description>&lt;p&gt;Good article explaining why they chose Go instead of node.js, to build their geo location query system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Some aspects they have highlighted about golang:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;High-throughput and low-latency&lt;/li&gt;
&lt;li&gt;CPU intensive workload&lt;/li&gt;
&lt;li&gt;Non-disruptive background loading, refreshing in-memory, in go they would be able to use goroutines&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It also explains how they come up with the solution to make the index of data, instead of use algorithms like &lt;a href=&#34;https://en.wikipedia.org/wiki/R-tree&#34;&gt;R-tree&lt;/a&gt;, or &lt;a href=&#34;http://blog.christianperone.com/2015/08/googles-s2-geometry-on-the-sphere-cells-and-hilbert-curve/&#34;&gt;S2&lt;/a&gt;
They saw that they are city-centric, all the business logic is related to city, so it allows they create two boundaries, one for the city, so first of all they found the city, and second inside the city they found the geolocations.&lt;/p&gt;

&lt;p&gt;As they said: &amp;ldquo;While the runtime complexity of the solution remains O(N), this simple technique reduced N from the order of 10,000s to the order of 100s.&amp;rdquo;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;They end up summarizing their experience with golang:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;High developer productivity (few days to learn language, easy to maintain because static typing)&lt;/li&gt;
&lt;li&gt;High performance in throughput and latency&lt;/li&gt;
&lt;li&gt;Super reliable&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Talk mastering Vim language</title>
      <link>http://krolow.com.br/learningpath/terminal/vim/talk-mastering-vim-language/</link>
      <pubDate>Sat, 27 Feb 2016 23:47:56 -0300</pubDate>
      
      <guid>http://krolow.com.br/learningpath/terminal/vim/talk-mastering-vim-language/</guid>
      <description>&lt;p&gt;He had started the talk, saying about typing not be the bottleneck (made a reference, for an article about tdd, that says exactly the same about TDD), but he says that what is the bottleneck is the time he is thinking how to type&amp;hellip;&lt;/p&gt;

&lt;p&gt;One point that caught my attention, and I agree with that is that we as programmers, we spent most of our time &lt;strong&gt;editing text&lt;/strong&gt;, &lt;strong&gt;not writing text&lt;/strong&gt;, and that&amp;rsquo;s a true fact.&lt;/p&gt;

&lt;p&gt;Vim focus on edit text firstly, while most of editors when you press a key of keyboard you are literally insert such character in the text, vim in the other hand it&amp;rsquo;s editing the text by this keyword pressed, in other words it&amp;rsquo;s trigging some functionality of vim.&lt;/p&gt;

&lt;p&gt;He give some tips of how remember git commands, by split into categories:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Verbs&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;d =&amp;gt; &lt;strong&gt;Delete&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;c =&amp;gt; &lt;strong&gt;Change&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&amp;gt; =&amp;gt; &lt;strong&gt;Indent&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;v =&amp;gt; &lt;strong&gt;Visually select&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;y =&amp;gt; &lt;strong&gt;Yank&lt;/strong&gt; (copy)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Noun in Vim &amp;ndash; Motions&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;w =&amp;gt; &lt;strong&gt;word&lt;/strong&gt; (forward by a &amp;ldquo;word&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;b =&amp;gt; &lt;strong&gt;back&lt;/strong&gt; (back by a &amp;ldquo;word&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;2j =&amp;gt; down 2 lines&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Noun in Vim &amp;ndash; Text Objects&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;iw =&amp;gt; &lt;strong&gt;inner word&lt;/strong&gt; (works from anywhere in a word)&lt;/li&gt;
&lt;li&gt;it =&amp;gt; &lt;strong&gt;inner tag&lt;/strong&gt; (the contents of an HTML tag)&lt;/li&gt;
&lt;li&gt;i =&amp;gt; &lt;strong&gt;inner quotes&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;ip =&amp;gt; &lt;strong&gt;inner paragraph&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;as =&amp;gt; &lt;strong&gt;a sentance&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Nouns in Vim &amp;ndash; Parameterized Text Objects&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;f, F =&amp;gt; &amp;ldquo;find&amp;rdquo; next character&lt;/li&gt;
&lt;li&gt;t, T =&amp;gt; &amp;ldquo;find&amp;rdquo; next character&lt;/li&gt;
&lt;li&gt;/ =&amp;gt; Search (up to the next match)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By memorize 30 key mappings it&amp;rsquo;s possible to achieve 2000 distinct commands.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introduction to go channels</title>
      <link>http://krolow.com.br/learningpath/go/channels/introduction-to-go-channels/</link>
      <pubDate>Fri, 26 Feb 2016 23:47:56 -0300</pubDate>
      
      <guid>http://krolow.com.br/learningpath/go/channels/introduction-to-go-channels/</guid>
      <description>

&lt;p&gt;In this post &lt;a href=&#34;https://twitter.com/karlseguin&#34;&gt;@karlseguin&lt;/a&gt; explains how channels work in golang.&lt;/p&gt;

&lt;p&gt;So basically channels is the way golang uses to make communication between goroutines. Can be for both, pass signals or data around, different than thread-based programming it is not necessary to lock data around, to avoid deadlocks, as with goroutines only one goroutine has access to a piece of data at a given time. So it does not do a lock of data.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;He gives one analogy about, thread vs  golang channels:&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
Consider a phone conversation. It can be difficult to coordinate who should talk, especially as more people get added to the conversation. It isn&#39;t uncommon for two people to speak at once. Conversely, it also isn&#39;t uncommon for one person to do all the talking and not let the others participate. This, to me, is what thread-based programming is like.&lt;br /&gt;&lt;br /&gt;
Channels on the other hand, are more like passing notes in class. Coordination is strictly controlled by the act of passing the note to someone. There&#39;s simply no way for you and your friend to write on the same note at the same time.
&lt;/blockquote&gt;

&lt;h3 id=&#34;how-create-a-go-channel:8ed816eb0536eba8df58334adeebd73f&#34;&gt;How create a go channel?&lt;/h3&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #a6e22e&#34;&gt;c&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;:=&lt;/span&gt; &lt;span style=&#34;color: #f8f8f2&#34;&gt;make(&lt;/span&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;chan&lt;/span&gt; &lt;span style=&#34;color: #66d9ef&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br /&gt;
Basically it creates one channel that enables pass integers between goroutines. It is called &lt;strong&gt;buffer channel&lt;/strong&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How clean old remote branches locally</title>
      <link>http://krolow.com.br/til/git-cleanup-old-remote-branches/</link>
      <pubDate>Tue, 23 Feb 2016 23:47:56 -0300</pubDate>
      
      <guid>http://krolow.com.br/til/git-cleanup-old-remote-branches/</guid>
      <description>&lt;p&gt;I use git-flow, so we use a lot of branches often, and those branches got stuck in our local repository,
to cleanup old remote branches we can use:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;git fetch origin --prune
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>about</title>
      <link>http://krolow.com.br/about/</link>
      <pubDate>Mon, 15 Feb 2016 01:31:49 -0200</pubDate>
      
      <guid>http://krolow.com.br/about/</guid>
      <description>

&lt;h2 id=&#34;about:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;About&lt;/h2&gt;

&lt;p&gt;Hey, you! I&amp;rsquo;m Vinícius Krolow, as the header of the page says&amp;hellip; I&amp;rsquo;m a Senior full stack developer with over a decade of experience.&lt;/p&gt;

&lt;p&gt;Currently I&amp;rsquo;m based in the beautiful city of &lt;a href=&#34;https://www.google.com.br/search?q=florianopolis&amp;amp;espv=2&amp;amp;biw=1920&amp;amp;bih=938&amp;amp;source=lnms&amp;amp;tbm=isch&amp;amp;sa=X&amp;amp;ved=0ahUKEwjE-Ifyu5vLAhVIjZAKHe1RBDwQ_AUIBygC#tbm=isch&amp;amp;q=florianopolis+praias&#34;&gt;Florianópolis&lt;/a&gt;, living with my wife and 4 dogs.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m always involved in some learning process, it&amp;rsquo;s one of the things that I most like in the technology field, it&amp;rsquo;s that felling, that we always have something new to learn and to improve ourselves.&lt;/p&gt;

&lt;p&gt;Professionally speaking, you can check my &lt;a href=&#34;https://github.com/krolow/cv&#34;&gt;resume here&lt;/a&gt;, and &lt;a href=&#34;https://us.linkedin.com/in/krolow&#34;&gt;linkedin&lt;/a&gt; I&amp;rsquo;m open for new opportunities, do not hesitate to &lt;a href=&#34;mailto:krolow@gmail.com&#34;&gt;contact me&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;experience:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;Experience&lt;/h3&gt;

&lt;p&gt;My main experience is in the backend side, I have worked about 6 years dedicated to backend side, and still the area where I most &lt;strong&gt;shine&lt;/strong&gt;. But, to be completed as a backend developer
you need to know the &lt;strong&gt;whole&lt;/strong&gt; thing, when I say the whole thing, is all the areas that you are working with, like mobile, or the frontend side
of WEB, devops side, etc&amp;hellip;&lt;/p&gt;

&lt;p&gt;As knowing the whole thing I have started to also supporting some tasks in the front-end side and I had at the time a good knowledge of javascript, so it was when I got more involved with frontend as well, developing some mobile applications with Objective-C native, as well hybrid apps&amp;hellip; Also got involved in some projects where I as dedicated to frontend side, been full time developer in javascript, it was few years before the term Full Stack have been given for such a role.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;In general a long of the years I got experience in:&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;doing the HTML/CSS&lt;/li&gt;
&lt;li&gt;cutting layout from Firworks/Photoshop&lt;/li&gt;
&lt;li&gt;develop desktop applications&lt;/li&gt;
&lt;li&gt;develop Backend API&lt;/li&gt;
&lt;li&gt;develop crawlers&lt;/li&gt;
&lt;li&gt;develop single page apps&lt;/li&gt;
&lt;li&gt;develop convertion tools&lt;/li&gt;
&lt;li&gt;develop social apps&lt;/li&gt;
&lt;li&gt;develop CMS&lt;/li&gt;
&lt;li&gt;customize CMS like Wordpress/Drupal/Tyopo3 even create plugins for those&lt;/li&gt;
&lt;li&gt;develop distributed systems using microservices architecture, etc..&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;my-focus:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;My Focus&lt;/h4&gt;

&lt;p&gt;I still enjoy a lot backend side, and it stills the area where I have most experience and I really enjoy to work with, but I
have been also focus in develop single apps applications with React.js, Angular, so that I can take ideas out of paper and implement the
whole thing.&lt;/p&gt;

&lt;p&gt;I really love to learn new things, as I have said before, and I have been dedicated my learning process in new languages (Go, Elixir) and paradigms
like Functional, as well in distributed systems (where I have started a master degree but I didn&amp;rsquo;t conclude because I moved to another city).&lt;/p&gt;

&lt;p&gt;These things that I&amp;rsquo;m learning are been my focus to enable me to create applications that scale, and keep the logic simple in the domain that belongs to, and I think new paradigms and languages would help me write a simple code that better describes the given problem that I need to solve, by having more languages and paradigms in my toolkit I can choose what is the best tool for a given task.&lt;/p&gt;

&lt;h4 id=&#34;keywords-that-i-have-been-using:6083a88ee3411b0d17ce02d738f69d47&#34;&gt;Keywords that I have been using&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Have used for several projects:&lt;/strong&gt; Angular.js, React.js, Node.js, PHP, Ruby, Javascript, CakePHP, Zend Framework, Symfony 2, ES6, ES2015, babel.js,
MySQL, PgSQL, MongoDB, RabbitMQ, Docker, Microservices, MongoDB, Redis, etcd, Java (Android), Redux, Vagrant, Bootstrap, Express, Jquery,
Wordpress&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;Have used more than once:&lt;/strong&gt; Python, Flask, Backbone, Asp, ElasticSearch, Lucene, Rx.js, Firebase, Electron, Puppet, Silex, Cilex, Windows
Powerpoint COM, Drupal, Typo3, Rails, Croogo&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;Have used at least once:&lt;/strong&gt; Ember.js, Riak, Objective-C, Django, Rails 4, Phonegap, OpenCV, Titanium, Hugo&lt;br /&gt;&lt;br /&gt;
&lt;strong&gt;Have been learning:&lt;/strong&gt; Go, Elixir&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>microservices quebrando gigantes em pequenos</title>
      <link>http://krolow.com.br/talks/microservices-quebrando-gigantes-em-pequenos/</link>
      <pubDate>Thu, 26 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://krolow.com.br/talks/microservices-quebrando-gigantes-em-pequenos/</guid>
      <description>&lt;p&gt;Talk given in Pelotas, at &lt;a href=&#34;http://www.meetup.com/GDG-Pelotas-Meetup/events/221248143/?eventId=221248143&#34;&gt;GDG Pelotas&lt;/a&gt;, it presents microservices architecture, by explain what is it, and how to achieve it.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>