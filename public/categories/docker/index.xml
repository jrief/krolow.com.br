<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on Vinícius Krolow</title>
    <link>http://krolow.com.br/categories/docker/</link>
    <description>Recent content in Docker on Vinícius Krolow</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 11 Jan 2017 11:51:54 +0000</lastBuildDate>
    <atom:link href="http://krolow.com.br/categories/docker/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Go compile binary not running in alpine and busybox</title>
      <link>http://krolow.com.br/til/go-compile-binary-not-running-in-alpine-and-busybox/</link>
      <pubDate>Wed, 11 Jan 2017 11:51:54 +0000</pubDate>
      
      <guid>http://krolow.com.br/til/go-compile-binary-not-running-in-alpine-and-busybox/</guid>
      <description>&lt;p&gt;I was working in a &lt;a href=&#34;https://github.com/krolow/tld-proxy-pac&#34;&gt;proxy pac project to serve TLD for local development&lt;/a&gt;. I have decided to use
golang, because the code would be quite simple and get a binary as output would help in use a small docker image and just copy the binary.&lt;/p&gt;

&lt;p&gt;Once the code was finish, I have started the creation of the docker file that was quite simple, just a copy of binary file to inside the
docker image.&lt;/p&gt;

&lt;p&gt;Unfortunately it was not that simple, in the first tries I got this error:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;panic: standard_init_linux.go:175: &lt;span style=&#34;color: #f8f8f2&#34;&gt;exec&lt;/span&gt; user process caused &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;no such file or directory&amp;quot;&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;recovered&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;
        panic: standard_init_linux.go:175: &lt;span style=&#34;color: #f8f8f2&#34;&gt;exec&lt;/span&gt; user process caused &lt;span style=&#34;color: #e6db74&#34;&gt;&amp;quot;no such file or directory&amp;quot;&lt;/span&gt;

goroutine &lt;span style=&#34;color: #ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;running, locked to thread&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;:
panic&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x7ea980, 0xc820143420&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /usr/local/go/src/runtime/panic.go:481 +0x3e6
github.com/urfave/cli.HandleAction.func1&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0xc82011b2e8&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /go/src/github.com/opencontainers/runc/Godeps/_workspace/src/github.com/urfave/cli/app.go:478 +0x38e
panic&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x7ea980, 0xc820143420&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /usr/local/go/src/runtime/panic.go:443 +0x4e9
github.com/opencontainers/runc/libcontainer.&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;*LinuxFactory&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;.StartInitialization.func1&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0xc82011abf8, 0xc82001e090, 0xc82011ad08&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /go/src/github.com/opencontainers/runc/Godeps/_workspace/src/github.com/opencontainers/runc/libcontainer/factory_linux.go:259 +0x136
github.com/opencontainers/runc/libcontainer.&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;*LinuxFactory&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;.StartInitialization&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0xc82005c820, 0x7f53b3b86470, 0xc820143420&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /go/src/github.com/opencontainers/runc/Godeps/_workspace/src/github.com/opencontainers/runc/libcontainer/factory_linux.go:277 +0x5b1
main.glob.func8&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0xc82007a780, 0x0, 0x0&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /go/src/github.com/opencontainers/runc/main_unix.go:26 +0x68
reflect.Value.call&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x74f180, 0x900b08, 0x13, 0x846ea8, 0x4, 0xc82011b268, 0x1, 0x1, 0x0, 0x0, ...&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /usr/local/go/src/reflect/value.go:435 +0x120d
reflect.Value.Call&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x74f180, 0x900b08, 0x13, 0xc82011b268, 0x1, 0x1, 0x0, 0x0, 0x0&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /usr/local/go/src/reflect/value.go:303 +0xb1
github.com/urfave/cli.HandleAction&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x74f180, 0x900b08, 0xc82007a780, 0x0, 0x0&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /go/src/github.com/opencontainers/runc/Godeps/_workspace/src/github.com/urfave/cli/app.go:487 +0x2ee
github.com/urfave/cli.Command.Run&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x849d58, 0x4, 0x0, 0x0, 0x0, 0x0, 0x0, 0x8dfe00, 0x51, 0x0, ...&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /go/src/github.com/opencontainers/runc/Godeps/_workspace/src/github.com/urfave/cli/command.go:191 +0xfec
github.com/urfave/cli.&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;*App&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;.Run&lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0xc820001980, 0xc82000a100, 0x2, 0x2, 0x0, 0x0&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /go/src/github.com/opencontainers/runc/Godeps/_workspace/src/github.com/urfave/cli/app.go:240 +0xaa4
main.main&lt;span style=&#34;color: #f92672&#34;&gt;()&lt;/span&gt;
        /go/src/github.com/opencontainers/runc/main.go:137 +0xe24
➜
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After some google about the error, I was thinking it might be related with the docker version, I have tried to upgrade and downgrade and keep
with no lucky.&lt;/p&gt;

&lt;p&gt;So I found &lt;a href=&#34;http://stackoverflow.com/questions/36279253/go-compiled-binary-wont-run-in-an-alpine-docker-container-on-ubuntu-host&#34;&gt;this
stackoverflow&lt;/a&gt; by the
description it seems that error was quite similar to mine.&lt;/p&gt;

&lt;p&gt;I have decided to give it a try, and it works!  Basically the issue is that golang &lt;code&gt;net&lt;/code&gt; library when normally build a package it creates
dynamic links to some &lt;code&gt;.so&lt;/code&gt; libs, in my case these were the links:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt; -&amp;gt; ldd builds/1.0.0/linux_amd64/tld-proxy-pac
        linux-vdso.so.1 &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&amp;gt;
        &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x00007ffd9a087000&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        libpthread.so.0 &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libpthread.so.0 &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x00007f6470502000&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        libc.so.6 &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libc.so.6 &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x00007f6470139000&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /lib64/ld-linux-x86-64.so.2 &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x00005589babab000&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;ldd builds/1.0.0/linux_amd64/tld-proxy-pac
        linux-vdso.so.1 &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&amp;gt;  &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x00007ffd9a087000&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        libpthread.so.0 &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libpthread.so.0 &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x00007f6470502000&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        libc.so.6 &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;&amp;gt; /lib/x86_64-linux-gnu/libc.so.6 &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x00007f6470139000&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
        /lib64/ld-linux-x86-64.so.2 &lt;span style=&#34;color: #f92672&#34;&gt;(&lt;/span&gt;0x00005589babab000&lt;span style=&#34;color: #f92672&#34;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;So what I have to do is build &lt;code&gt;netgo&lt;/code&gt; by forcing static links &lt;code&gt;CGO_ENABLED=0 go build -tags netgo -a -v&lt;/code&gt; and build my code using
&lt;code&gt;CGO_ENABLED=0&lt;/code&gt; as well &lt;code&gt;CGO_ENABLED=0 goxc&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;By checking the links in the new binary output, I could ensure the non existence of dynamic links:&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;-&amp;gt; ldd builds/1.0.0/linux_amd64/tld-proxy-pac
        not a dynamic executable
&lt;/pre&gt;&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>DOCKER_OPTS not working in ubuntu 16.04</title>
      <link>http://krolow.com.br/til/docker-opts-not-working-in-ubuntu-16.04/</link>
      <pubDate>Sun, 27 Mar 2016 13:56:59 +0000</pubDate>
      
      <guid>http://krolow.com.br/til/docker-opts-not-working-in-ubuntu-16.04/</guid>
      <description>&lt;p&gt;In ubuntu 16.04 docker was not loading the &lt;code&gt;DOCKER_OPTS&lt;/code&gt; from &lt;code&gt;/etc/default/docker&lt;/code&gt; file, so I was not able to change DNS of docker
global.&lt;/p&gt;

&lt;p&gt;After search a bit i found that &lt;a href=&#34;https://github.com/docker/docker/issues/9889#issuecomment-109766580&#34;&gt;issue &lt;/a&gt; with a explanation of why it was
not working.&lt;/p&gt;

&lt;p&gt;So basically the systemd docker configuration (&lt;code&gt;/lib/systemd/system/docker.service&lt;/code&gt;) is not using the &lt;code&gt;/etc/default/docker&lt;/code&gt;, the problem is solved by adding an &lt;code&gt;EnvironmentFile&lt;/code&gt; directive and modify command to include the options from file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;EnvironmentFile=-/etc/default/docker
ExecStart=/usr/bin/docker daemon $DOCKER_OPTS -H fd://
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;
In the end &lt;code&gt;/lib/systemd/system/docker.service&lt;/code&gt; looks like:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;Unit&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;Description&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;Docker Application Container Engine
&lt;span style=&#34;color: #f8f8f2&#34;&gt;Documentation&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;https://docs.docker.com
&lt;span style=&#34;color: #f8f8f2&#34;&gt;After&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;network.target docker.socket
&lt;span style=&#34;color: #f8f8f2&#34;&gt;Requires&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;docker.socket

&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;Service&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;Type&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;notify
&lt;span style=&#34;color: #f8f8f2&#34;&gt;EnvironmentFile&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;-/etc/default/docker
&lt;span style=&#34;color: #f8f8f2&#34;&gt;ExecStart&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;/usr/bin/docker daemon &lt;span style=&#34;color: #f8f8f2&#34;&gt;$DOCKER_OPTS&lt;/span&gt; -H fd://
&lt;span style=&#34;color: #f8f8f2&#34;&gt;MountFlags&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;slave
&lt;span style=&#34;color: #f8f8f2&#34;&gt;LimitNOFILE&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;1048576
&lt;span style=&#34;color: #f8f8f2&#34;&gt;LimitNPROC&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;1048576
&lt;span style=&#34;color: #f8f8f2&#34;&gt;LimitCORE&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;infinity
&lt;span style=&#34;color: #f8f8f2&#34;&gt;TimeoutStartSec&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;0

&lt;span style=&#34;color: #f92672&#34;&gt;[&lt;/span&gt;Install&lt;span style=&#34;color: #f92672&#34;&gt;]&lt;/span&gt;
&lt;span style=&#34;color: #f8f8f2&#34;&gt;WantedBy&lt;/span&gt;&lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;multi-user.target
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Once edited, I have saved and restarted the docker service, and voila DOCKER_OPTS was working and my docker images are getting the right DNS.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>