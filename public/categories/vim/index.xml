<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vim on Vinícius Krolow</title>
    <link>http://krolow.com.br/categories/vim/</link>
    <description>Recent content in Vim on Vinícius Krolow</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 08 Mar 2016 14:23:02 -0300</lastBuildDate>
    <atom:link href="http://krolow.com.br/categories/vim/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Back to terminal: Tmux &#43; Vim &#43; ZSH &#43; Gnome Terminal</title>
      <link>http://krolow.com.br/til/back-to-terminal-tmux-vim-zsh-gnome-terminal/</link>
      <pubDate>Tue, 08 Mar 2016 14:23:02 -0300</pubDate>
      
      <guid>http://krolow.com.br/til/back-to-terminal-tmux-vim-zsh-gnome-terminal/</guid>
      <description>

&lt;p&gt;I was willing to get back to vim (i have used it about 8-9 years ago), In the last couple of years I have switch around between code editors, &lt;strong&gt;I have tried&lt;/strong&gt;: Eclipse, Sublime 2 and lately I have been using atom.&lt;/p&gt;

&lt;p&gt;I get motivated to get back to vim, after &lt;a href=&#34;http://krolow.com.br/learningpath/vim/why-use-vim/talk-mastering-vim-language/&#34;&gt;have watched this talk about Vim&lt;/a&gt;, and by my &lt;a href=&#34;http://nunes.io&#34;&gt;co-worker&lt;/a&gt;, whom is using vim as well&amp;hellip; and it sounds excited to get back for use &lt;strong&gt;only terminal&lt;/strong&gt;, to try avoid as much as possible mouse.&lt;/p&gt;

&lt;p&gt;So well talking back about terminal, It&amp;rsquo;s going to be necessary to leave out from guake, the termianl that I have been using for the last few years. The reason is that guake, is not done to keep in fullscreen, it does it, but his core functionality is to be a drop-down terminal, so it is better to choose another terminal for given task, for this, gnome already come with &lt;code&gt;gnome-terminal&lt;/code&gt;, but It would be nice to gnome-terminal have support to split into panels/windows&amp;hellip; I have remember to have heard about &lt;strong&gt;tmux&lt;/strong&gt;.&lt;/p&gt;

&lt;h3 id=&#34;looking-tmux-https-tmux-github-io:8e71b53f3bf81407dc9ec7f0b960bc77&#34;&gt;Looking &lt;a href=&#34;https://tmux.github.io/&#34;&gt;tmux&lt;/a&gt;&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Install in ubuntu:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;sudo apt-get install tmux
&lt;/pre&gt;&lt;/div&gt;

It by defaults uses &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;B&lt;/kbd&gt;, as the shortcut to trigger commands, &lt;strong&gt;but&lt;/strong&gt; it is quite uncomfortable to type, so I was needing to change the trigger, after some research of how to change it I have found this repository: &lt;a href=&#34;http://tony.github.io/tmux-config/&#34;&gt;http://tony.github.io/tmux-config/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It is an example of tmux configuration, it changes the shortcut/trigger to &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt; and it brings some cool configurations like:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/thewtex/tmux-mem-cpu-load&#34;&gt;tmux-mem-cpu-load&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Backing to Tmux itself&amp;hellip;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;So basically the commands are simple, they &lt;strong&gt;MUST&lt;/strong&gt; be executed after the trigger/predix, so as I have used &lt;em&gt;tmux-config&lt;/em&gt; now it is: &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Basic commands that I have learned:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pane&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create vertical&lt;/strong&gt;: &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt; &lt;kbd&gt;%&lt;/kbd&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create horizontal&lt;/strong&gt;: &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt; &lt;kbd&gt;&amp;ldquo;&lt;/kbd&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rotate&lt;/strong&gt;: &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt; &lt;kbd&gt;o&lt;/kbd&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Window&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Create new&lt;/strong&gt;: &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt;  &lt;kbd&gt;c&lt;/kbd&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Move to next window&lt;/strong&gt;:&lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt; &lt;kbd&gt;n&lt;/kbd&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Move to prev window&lt;/strong&gt;: &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt; &lt;kbd&gt;p&lt;/kbd&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Move to specific window&lt;/strong&gt;: &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;a&lt;/kbd&gt; &lt;kbd&gt;[0-9]&lt;/kbd&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Scroll in specific panel&lt;/strong&gt; &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt; a &lt;/kbd&gt; &lt;kbd&gt;[&lt;/kbd&gt; to active and &lt;kbd&gt;up&lt;/kbd&gt; or &lt;kbd&gt;down&lt;/kbd&gt; to scroll&lt;/p&gt;

&lt;p&gt;I have decided to start always tmux together with &lt;strong&gt;zsh&lt;/strong&gt;, to achieve such a thing, I have added in the end of my &lt;code&gt;vim ~/.zshrc&lt;/code&gt; the following command:&lt;/p&gt;

&lt;div class=&#34;highlight&#34; style=&#34;background: #272822&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span style=&#34;color: #66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;[[&lt;/span&gt; ! &lt;span style=&#34;color: #f8f8f2&#34;&gt;$TERM&lt;/span&gt; &lt;span style=&#34;color: #f92672&#34;&gt;=&lt;/span&gt;~ screen &lt;span style=&#34;color: #f92672&#34;&gt;]]&lt;/span&gt;; &lt;span style=&#34;color: #66d9ef&#34;&gt;then&lt;/span&gt;
&lt;span style=&#34;color: #66d9ef&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color: #f8f8f2&#34;&gt;exec &lt;/span&gt;tmux
&lt;span style=&#34;color: #66d9ef&#34;&gt;fi&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id=&#34;given-a-better-look-to-terminal:8e71b53f3bf81407dc9ec7f0b960bc77&#34;&gt;Given a better look to terminal&lt;/h3&gt;

&lt;p&gt;Once been using tmux and gnome-terminal, it would be nice to have a better look in terminal. I have found few themes that would make it look better, so I have changed the themes for: &lt;strong&gt;oh-my-zsh&lt;/strong&gt;, &lt;strong&gt;Gnome Terminal&lt;/strong&gt;, and &lt;strong&gt;Vim&lt;/strong&gt;. For all of them I have tried to pick as similar as possible with atom dark theme:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Oh my zsh Theme:&lt;/strong&gt; &lt;a href=&#34;https://github.com/denysdovhan/spaceship-zsh-theme&#34;&gt;Spaceship&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Gnome Terminal:&lt;/strong&gt; &lt;a href=&#34;https://github.com/denysdovhan/one-gnome-terminal&#34;&gt;One Gnome&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Vim:&lt;/strong&gt; &lt;a href=&#34;https://github.com/gosukiwi/vim-atom-dark&#34;&gt;Atom Dark&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;to-keep-improve:8e71b53f3bf81407dc9ec7f0b960bc77&#34;&gt;To keep improve&lt;/h4&gt;

&lt;p&gt;I need to give a look on &lt;a href=&#34;https://github.com/powerline/powerline&#34;&gt;Powerline&lt;/a&gt;, after watch the below video it seems amazing:&lt;/p&gt;

&lt;iframe width=&#34;100%&#34; height=&#34;480&#34; src=&#34;https://www.youtube.com/embed/DgLIPYP8nnI&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;
A part of that, I still needing to configure my &lt;strong&gt;vim&lt;/strong&gt;, I have tried to use this &lt;a href=&#34;https://github.com/amix/vimrc&#34;&gt;vimrc&lt;/a&gt; it looks good, &lt;strong&gt;BUT&lt;/strong&gt; I think to begin it would be better if I configure &lt;strong&gt;vim&lt;/strong&gt; by my self, so that I can learn while configure it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Talk mastering Vim language</title>
      <link>http://krolow.com.br/learningpath/vim/why-use-vim/talk-mastering-vim-language/</link>
      <pubDate>Sat, 27 Feb 2016 23:47:56 -0300</pubDate>
      
      <guid>http://krolow.com.br/learningpath/vim/why-use-vim/talk-mastering-vim-language/</guid>
      <description>&lt;p&gt;He had started the talk, saying about typing not be the bottleneck (made a reference, for an article about tdd, that says exactly the same about TDD), but he says that what is the bottleneck is the time he is thinking how to type&amp;hellip;&lt;/p&gt;

&lt;p&gt;One point that caught my attention, and I agree with that is that we as programmers, we spent most of our time &lt;strong&gt;editing text&lt;/strong&gt;, &lt;strong&gt;not writing text&lt;/strong&gt;, and that&amp;rsquo;s a true fact.&lt;/p&gt;

&lt;p&gt;Vim focus on edit text firstly, while most of editors when you press a key of keyboard you are literally insert such character in the text, vim in the other hand it&amp;rsquo;s editing the text by this keyword pressed, in other words it&amp;rsquo;s trigging some functionality of vim.&lt;/p&gt;

&lt;p&gt;He give some tips of how remember git commands, by split into categories:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Verbs&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;d =&amp;gt; &lt;strong&gt;Delete&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;c =&amp;gt; &lt;strong&gt;Change&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&amp;gt; =&amp;gt; &lt;strong&gt;Indent&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;v =&amp;gt; &lt;strong&gt;Visually select&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;y =&amp;gt; &lt;strong&gt;Yank&lt;/strong&gt; (copy)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Noun in Vim &amp;ndash; Motions&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;w =&amp;gt; &lt;strong&gt;word&lt;/strong&gt; (forward by a &amp;ldquo;word&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;b =&amp;gt; &lt;strong&gt;back&lt;/strong&gt; (back by a &amp;ldquo;word&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;2j =&amp;gt; down 2 lines&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Noun in Vim &amp;ndash; Text Objects&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;iw =&amp;gt; &lt;strong&gt;inner word&lt;/strong&gt; (works from anywhere in a word)&lt;/li&gt;
&lt;li&gt;it =&amp;gt; &lt;strong&gt;inner tag&lt;/strong&gt; (the contents of an HTML tag)&lt;/li&gt;
&lt;li&gt;i =&amp;gt; &lt;strong&gt;inner quotes&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;ip =&amp;gt; &lt;strong&gt;inner paragraph&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;as =&amp;gt; &lt;strong&gt;a sentance&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Nouns in Vim &amp;ndash; Parameterized Text Objects&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;f, F =&amp;gt; &amp;ldquo;find&amp;rdquo; next character&lt;/li&gt;
&lt;li&gt;t, T =&amp;gt; &amp;ldquo;find&amp;rdquo; next character&lt;/li&gt;
&lt;li&gt;/ =&amp;gt; Search (up to the next match)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By memorize 30 key mappings it&amp;rsquo;s possible to achieve 2000 distinct commands.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>